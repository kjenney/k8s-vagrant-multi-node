---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: demo1
  name: demo1
  namespace: default
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: demo1
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: demo1
    spec:
      initContainers:
      - image: busybox
        name: copy-index-html
        command: ["/bin/sh", "-c", "echo demo1 > /usr/local/apache2/htdocs/index.html"]
        volumeMounts:
        - mountPath: /usr/local/apache2/htdocs
          name: httpd-volume-demo1
      containers:
      - image: httpd
        imagePullPolicy: Always
        name: httpd
        volumeMounts:
        - mountPath: /usr/local/apache2/htdocs
          name: httpd-volume-demo1
        ports:
        - containerPort: 80
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - name: httpd-volume-demo1
        emptyDir: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: demo2
  name: demo2
  namespace: default
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: demo2
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: demo2
    spec:
      initContainers:
      - image: busybox
        name: copy-index-html
        command: ["/bin/sh", "-c", "echo demo2 > /usr/local/apache2/htdocs/index.html"]
        volumeMounts:
        - mountPath: /usr/local/apache2/htdocs
          name: httpd-volume-demo2
      containers:
      - image: httpd
        imagePullPolicy: Always
        name: httpd
        volumeMounts:
        - mountPath: /usr/local/apache2/htdocs
          name: httpd-volume-demo2
        ports:
        - containerPort: 80
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - name: httpd-volume-demo2
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: demo1
  name: demo1
  namespace: default
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: demo1
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: demo2
  name: demo2
  namespace: default
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: demo2
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: demo-localhost
  namespace: default
spec:
  ingressClassName: nginx
  rules:
  - host: demo1.localdev.me
    http:
      paths:
      - backend:
          service:
            name: demo1
            port:
              number: 80
        path: /
        pathType: Prefix
  - host: demo2.localdev.me
    http:
      paths:
      - backend:
          service:
            name: demo2
            port:
              number: 80
        path: /
        pathType: Prefix